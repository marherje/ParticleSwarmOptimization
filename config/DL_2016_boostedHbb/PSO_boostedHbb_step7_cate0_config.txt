##Parameters for the Particle Swarm Optimization

##RunOn = EKPSL5 | EKPSL5 | NAFSL5 | NAFSL6
RunOn=NAFSL6

## Swarm Parameters
NParticles=60
NIterations=3
wIneratia=0.729
wMemory=1.49445
wSwarm=1.49445

##FOM = ROCIntegral | Separation | rejB_vs_effS_0.1 | rejB_vs_effS_0.3 |rejB_vs_effS_0.5 | Chi2_B_muSB
FOM=ROCIntegral
KSThreshold=0.2
MaxVariablesInCombination=14
##only add variable if new FOM > ImprovementThreshold*FOM
ImprovementThreshold=1.005

## repeat each training additional times with different random seeds for test/training splitting (0==no repetition)
## only reasonable if SplitSeed=0 is in the PreparationString a few lines down
## and if UseEvenOddSplitting=0
## FOM and KS will be taken as the worst of all trainings
RepeatTrainingNTimes=0
## draw random starting variables, 0== use predermined starting variables
DrawNRandomAsStartingVars=0
##NOTYET SaveTrainingsToTrees=False

##TMVA Options
FactoryString=!V:Silent:Color:!DrawProgressBar:Transformations=I:AnalysisType=Classification
PreparationString=SplitMode=Random:NormMode=EqualNumEvents:!V
##if you want to limit the number of events do it eiter PreparationString or here
#nTrain_Signal=
#nTrain_Background=
#nTest_Signal=
#nTest_Background=
##Weight expression, might need to be declared in WeightVariables furhter down
## probably same syntax as in TTree::Draw 
SignalWeightExpression=globalTimesEventWeight
BackgroundWeightExpression=globalTimesEventWeight

##--------------------------------------------------
## Method to train and test:
##  - Only tested with BDT so far
##  - You might want to think about how to handle NEGATIVE WEIGHTS
##  - Parameters in MethodParams will be overwritten if they span the search space
MethodType=TMVA::Types::kBDT
MethodParams=!H:!V:NTrees=100:BoostType=Grad:Shrinkage=0.01:UseBaggedBoost:GradBaggingFraction=0.5:nCuts=10:MaxDepth=2:NegWeightTreatment=IgnoreNegWeightsInTraining
##--------------------------------------------------

##--------------------------------------------------
## Search Space:
##  - coord=["Name",minValue,maxValue,maxVelocity,"int|float"]
##  - If min and max value are the same the value is not varied
coord=["NTrees",100,1500,50,"int"]
coord=["Shrinkage",0.001,0.05,0.002,"float"]
coord=["GradBaggingFraction",0.1,0.9,0.05,"float"]
coord=["nCuts",10,80,4,"int"]
##coord=["MaxDepth",2,3,1,"int"]
##--------------------------------------------------

##--------------------------------------------------
## Source Trees:
##  - if UseEvenOddSplitting=1, the input trees will be split in training/testsample with Variable "Evt_Odd"
##  - maybe change the variable in PSO/PrepareTrees.C
##    else TMVA will use built-in splitting
UseEvenOddSplitting=0

SourceBackgroundFile=PSO_input/background_TrainingPlusTesting.root
SourceBackgroundTree=event_mvaVariables_step7_cate0

SourceSignalFile=PSO_input/signal_TrainingPlusTesting.root
SourceSignalTree=event_mvaVariables_step7_cate0
##--------------------------------------------------

##--------------------------------------------------
## use selections without quotation marks:
##  - example: SelectionString=(N_Jets==4)&&(N_BTagsM==3)
#SelectionString=TMath::Abs(CSV[0])<=1.0
##--------------------------------------------------

##------------------------------------------------
##Variables in Format ["NAME","TYPE","LENGTH","VarExpression"]
##IMPORTANT dont leave a blank line between the initial and the end variables line
##variables the optimization starts with
InitialVariables:
["avgDeltaR_jet_jet","F","","avgDeltaR_jet_jet"]
["mass_jet_jet_min_deltaR","F","","mass_jet_jet_min_deltaR"]
["H3_jet","F","","H3_jet"]
["R1_jet","F","","R1_jet"]
["HT_jets","F","","HT_jets"]
["R4_tag","F","","R4_tag"]
["median_mass_jet_jet","F","","median_mass_jet_jet"]
["mass_higgsLikeDijet2","F","","mass_higgsLikeDijet2"]
["ptSum_jets_leptons","F","","ptSum_jets_leptons"]
["circularity_jet","F","","circularity_jet"]
["avgDeltaR_tag_tag","F","","avgDeltaR_tag_tag"]
["transSphericity_jet","F","","transSphericity_jet"]
EndVariables

##---------------------------------------------------
## variables the swarm can try
AdditionalVariables:
EndVariables

##---------------------------------------------------
## variables used for reweighting and stuff
WeightVariables:
["globalTimesEventWeight","F","","globalTimesEventWeight"]
EndVariables
##---------------------------------------------------
