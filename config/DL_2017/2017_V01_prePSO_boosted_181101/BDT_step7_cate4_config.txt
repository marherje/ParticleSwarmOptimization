##Parameters for the Particle Swarm Optimization

##RunOn = EKPSL5 | EKPSL5 | NAFSL5 | NAFSL6
RunOn=NAFSL6

## Swarm Parameters
NParticles=40
NIterations=25
wIneratia=0.729
wMemory=1.49445
wSwarm=1.49445

##FOM = ROCIntegral | Separation | rejB_vs_effS_0.1 | rejB_vs_effS_0.3 |rejB_vs_effS_0.5 | Chi2_B_muSB
FOM=ROCIntegral
KSThreshold=0.2

# add/remove variables from initial list
FindBestVariables=0

# used only if FindBestVariables=1
MaxVariablesInCombination=20

# add variable only if "new FOM > ImprovementThreshold*FOM"
ImprovementThreshold=1.005

## repeat each training additional times with different random seeds for test/training splitting (0==no repetition)
## only reasonable if SplitSeed=0 is in the PreparationString a few lines down
## and if UseFixedTrainTestSplitting=0
## FOM and KS will be taken as the worst of all trainings
RepeatTrainingNTimes=0
## draw random starting variables, 0== use predermined starting variables
DrawNRandomAsStartingVars=0
##NOTYET SaveTrainingsToTrees=False

##TMVA Options
FactoryString=!V:Silent:Color:!DrawProgressBar:Transformations=I:AnalysisType=Classification
PreparationString=SplitMode=Random:NormMode=EqualNumEvents:!V
##if you want to limit the number of events do it either PreparationString or here
#nTrain_Signal=
#nTrain_Background=
#nTest_Signal=
#nTest_Background=
##Weight expression, might need to be declared in WeightVariables furhter down
## probably same syntax as in TTree::Draw
SignalWeightExpression=weight
BackgroundWeightExpression=weight

##--------------------------------------------------
## Method to train and test:
##  - Only tested with BDT so far
##  - You might want to think about how to handle NEGATIVE WEIGHTS
##  - Parameters in MethodParams will be overwritten if they span the search space
MethodType=TMVA::Types::kBDT
MethodParams=!H:!V:NTrees=100:BoostType=Grad:Shrinkage=0.01:UseBaggedBoost:BaggedSampleFraction=0.5:nCuts=10:MaxDepth=2:NegWeightTreatment=IgnoreNegWeightsInTraining
##--------------------------------------------------

##--------------------------------------------------
## Search Space:
##  - coord=["Name",minValue,maxValue,maxVelocity,"int|float"]
##  - If min and max value are the same the value is not varied
coord=["NTrees",100,1500,50,"int"]
coord=["Shrinkage",0.001,0.05,0.002,"float"]
coord=["BaggedSampleFraction",0.1,0.9,0.05,"float"]
coord=["nCuts",10,80,4,"int"]
coord=["MaxDepth",2,3,1,"int"]
##--------------------------------------------------

##--------------------------------------------------
## Source Trees:
##
##  - if UseFixedTrainTestSplitting=1,
##    the input trees will be split in training/test samples
##    with the string selector in "UseFixedTrainTestSplitting_Train"
##
##  - if UseFixedTrainTestSplitting=0, TMVA will use built-in splitting
##
UseFixedTrainTestSplitting=1
UseFixedTrainTestSplitting_Train="(eventNumber%2) == 0"

SourceBackgroundFile=PSO_input/background_TrainingPlusTesting.root
SourceBackgroundTree=liteTreeTTH_step7_cate4

SourceSignalFile=PSO_input/signal_TrainingPlusTesting.root
SourceSignalTree=liteTreeTTH_step7_cate4
##--------------------------------------------------

##--------------------------------------------------
## use selections without quotation marks:
##  - example: SelectionString=(N_Jets==4)&&(N_BTagsM==3)
#SelectionString=TMath::Abs(CSV[0])<=1.0
##--------------------------------------------------

##------------------------------------------------
##Variables in Format ["NAME","TYPE","LENGTH","VarExpression"]
##IMPORTANT dont leave a blank line between the initial and the end variables line
##variables the optimization starts with
InitialVariables:
["MEM","F","","MEM"]
["maxDeltaEta_tag_tag","F","","maxDeltaEta_tag_tag"]
["avgDeltaR_tag_tag","F","","avgDeltaR_tag_tag"]
["maxDeltaEta_jet_jet","F","","maxDeltaEta_jet_jet"]
["minDeltaR_tag_tag","F","","minDeltaR_tag_tag"]
["multiplicity_higgsLikeDijet15","F","","multiplicity_higgsLikeDijet15"]
["pT_tag_tag_min_deltaR","F","","pT_tag_tag_min_deltaR"]
["btagDiscriminatorAverage_tagged","F","","btagDiscriminatorAverage_tagged"]
["twist_tag_tag_max_mass","F","","twist_tag_tag_max_mass"]
["R1_tag","F","","R1_tag"]
["mass_jet_jet_jet_max_pT","F","","mass_jet_jet_jet_max_pT"]
["HT_tags","F","","HT_tags"]
#["ptSum_jets_leptons","F","","ptSum_jets_leptons"]
#["mass_tag_tag_min_deltaR","F","","mass_tag_tag_min_deltaR"]
#["R4_tag","F","","R4_tag"]
#["twist_tag_tag_min_deltaR","F","","twist_tag_tag_min_deltaR"]
#["btagDiscriminatorAverage_untagged","F","","btagDiscriminatorAverage_untagged"]
#["minDeltaR_jet_jet","F","","minDeltaR_jet_jet"]
#["mass_higgsLikeDijet","F","","mass_higgsLikeDijet"]
#["centrality_tags","F","","centrality_tags"]
#["D_tag","F","","D_tag"]
#["R1_jet","F","","R1_jet"]
#["aplanarity_jet","F","","aplanarity_jet"]
#["twist_jet_tag_max_mass","F","","twist_jet_tag_max_mass"]
#["H0_jet","F","","H0_jet"]
#["avgDeltaR_jet_tag","F","","avgDeltaR_jet_tag"]
#["R2_jet","F","","R2_jet"]
#["R2_tag","F","","R2_tag"]
#["mass_jet_tag_min_deltaR","F","","mass_jet_tag_min_deltaR"]
#["H0_tag","F","","H0_tag"]
#["centrality_jets_leps","F","","centrality_jets_leps"]
#["isotropy_jet","F","","isotropy_jet"]
#["isotropy_tag","F","","isotropy_tag"]
#["H3_tag","F","","H3_tag"]
#["R4_jet","F","","R4_jet"]
#["transSphericity_tag","F","","transSphericity_tag"]
#["transSphericity_jet","F","","transSphericity_jet"]
#["pT_jet_jet_min_deltaR","F","","pT_jet_jet_min_deltaR"]
#["median_mass_jet_jet","F","","median_mass_jet_jet"]
#["mass_tag_tag_max_mass","F","","mass_tag_tag_max_mass"]
EndVariables

##---------------------------------------------------
## variables the swarm can try
AdditionalVariables:
EndVariables

##---------------------------------------------------
## variables used for reweighting and stuff
WeightVariables:
["weight","F","","weight"]
EndVariables
##---------------------------------------------------
